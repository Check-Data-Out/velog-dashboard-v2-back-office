name: Test CI

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches:
      - main

jobs:
  test-ci:
    runs-on: ubuntu-latest

    # TimescaleDB 서비스 추가
    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_USER: vd2
          POSTGRES_PASSWORD: vd2
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # 서비스 상태 확인 설정
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13.0

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.8.4

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Define a cache for the virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}-${{ runner.os }}

      - name: Install dependencies
        run: poetry install --with dev

      - name: Create .env file
        run: |
          echo "SECRET_KEY=adsfgdsftrgdfsvdf" >> .env
          echo "DEBUG=True" >> .env
          echo "DATABASE_ENGINE=timescale.db.backends.postgresql" >> .env
          echo "DATABASE_NAME=postgres" >> .env
          echo "POSTGRES_USER=vd2" >> .env
          echo "POSTGRES_PASSWORD=vd2" >> .env
          echo "POSTGRES_HOST=localhost" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "AES_KEY_0=${{ secrets.AES_KEY_0 }}" >> .env
          echo "AES_KEY_1=${{ secrets.AES_KEY_1 }}" >> .env
          echo "AES_KEY_2=${{ secrets.AES_KEY_2 }}" >> .env
          echo "AES_KEY_3=${{ secrets.AES_KEY_3 }}" >> .env
          echo "AES_KEY_4=${{ secrets.AES_KEY_4 }}" >> .env
          echo "AES_KEY_5=${{ secrets.AES_KEY_5 }}" >> .env
          echo "AES_KEY_6=${{ secrets.AES_KEY_6 }}" >> .env
          echo "AES_KEY_7=${{ secrets.AES_KEY_7 }}" >> .env
          echo "AES_KEY_8=${{ secrets.AES_KEY_8 }}" >> .env
          echo "AES_KEY_9=${{ secrets.AES_KEY_9 }}" >> .env

      # TimescaleDB 확장 생성 확인
      - name: Verify TimescaleDB extension
        run: |
          PGPASSWORD=vd2 psql -h localhost -U vd2 -d postgres -c "SELECT extname, extversion FROM pg_extension WHERE extname = 'timescaledb';"

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Run Django system check
        run: poetry run python manage.py check

      - name: Run tests
        run: poetry run pytest -v --full-trace --showlocals --tb=long --capture=no
